// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v3.21.12
// source: ContactDiscovery.proto

// Copyright 2021 Signal Messenger, LLC
// SPDX-License-Identifier: AGPL-3.0-only

package signalpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CDSClientRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Each ACI/UAK pair is a 32-byte buffer, containing the 16-byte ACI followed
	// by its 16-byte UAK.
	AciUakPairs []byte `protobuf:"bytes,1,opt,name=aci_uak_pairs,json=aciUakPairs" json:"aci_uak_pairs,omitempty"`
	// Each E164 is an 8-byte big-endian number, as 8 bytes.
	PrevE164S    []byte `protobuf:"bytes,2,opt,name=prev_e164s,json=prevE164s" json:"prev_e164s,omitempty"`
	NewE164S     []byte `protobuf:"bytes,3,opt,name=new_e164s,json=newE164s" json:"new_e164s,omitempty"`
	DiscardE164S []byte `protobuf:"bytes,4,opt,name=discard_e164s,json=discardE164s" json:"discard_e164s,omitempty"`
	// If true, the client has more pairs or e164s to send.  If false or unset,
	// this is the client's last request, and processing should commence.
	HasMore *bool `protobuf:"varint,5,opt,name=has_more,json=hasMore" json:"has_more,omitempty"`
	// If set, a token which allows rate limiting to discount the e164s in
	// the request's prev_e164s, only counting new_e164s.  If not set, then
	// rate limiting considers both prev_e164s' and new_e164s' size.
	Token []byte `protobuf:"bytes,6,opt,name=token" json:"token,omitempty"`
	// After receiving a new token from the server, send back a message just
	// containing a token_ack.
	TokenAck *bool `protobuf:"varint,7,opt,name=token_ack,json=tokenAck" json:"token_ack,omitempty"`
	// Request that, if the server allows, both ACI and PNI be returned even
	// if the aci_uak_pairs don't match.
	ReturnAcisWithoutUaks *bool `protobuf:"varint,8,opt,name=return_acis_without_uaks,json=returnAcisWithoutUaks" json:"return_acis_without_uaks,omitempty"`
}

func (x *CDSClientRequest) Reset() {
	*x = CDSClientRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ContactDiscovery_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CDSClientRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CDSClientRequest) ProtoMessage() {}

func (x *CDSClientRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ContactDiscovery_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CDSClientRequest.ProtoReflect.Descriptor instead.
func (*CDSClientRequest) Descriptor() ([]byte, []int) {
	return file_ContactDiscovery_proto_rawDescGZIP(), []int{0}
}

func (x *CDSClientRequest) GetAciUakPairs() []byte {
	if x != nil {
		return x.AciUakPairs
	}
	return nil
}

func (x *CDSClientRequest) GetPrevE164S() []byte {
	if x != nil {
		return x.PrevE164S
	}
	return nil
}

func (x *CDSClientRequest) GetNewE164S() []byte {
	if x != nil {
		return x.NewE164S
	}
	return nil
}

func (x *CDSClientRequest) GetDiscardE164S() []byte {
	if x != nil {
		return x.DiscardE164S
	}
	return nil
}

func (x *CDSClientRequest) GetHasMore() bool {
	if x != nil && x.HasMore != nil {
		return *x.HasMore
	}
	return false
}

func (x *CDSClientRequest) GetToken() []byte {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *CDSClientRequest) GetTokenAck() bool {
	if x != nil && x.TokenAck != nil {
		return *x.TokenAck
	}
	return false
}

func (x *CDSClientRequest) GetReturnAcisWithoutUaks() bool {
	if x != nil && x.ReturnAcisWithoutUaks != nil {
		return *x.ReturnAcisWithoutUaks
	}
	return false
}

type CDSClientResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Each triple is an 8-byte e164, a 16-byte PNI, and a 16-byte ACI.
	// If the e164 was not found, PNI and ACI are all zeros.  If the PNI
	// was found but the ACI was not, the PNI will be non-zero and the ACI
	// will be all zeros.  ACI will be returned if one of the returned
	// PNIs has an ACI/UAK pair that matches.
	//
	// Should the request be successful (IE: a successful status returned),
	// |e164_pni_aci_triple| will always equal |e164| of the request,
	// so the entire marshalled size of the response will be (2+32)*|e164|,
	// where the additional 2 bytes are the id/type/length additions of the
	// protobuf marshaling added to each byte array.  This avoids any data
	// leakage based on the size of the encrypted output.
	E164PniAciTriples []byte `protobuf:"bytes,1,opt,name=e164_pni_aci_triples,json=e164PniAciTriples" json:"e164_pni_aci_triples,omitempty"`
	// A token which allows subsequent calls' rate limiting to discount the
	// e164s sent up in this request, only counting those in the next
	// request's new_e164s.
	Token []byte `protobuf:"bytes,3,opt,name=token" json:"token,omitempty"`
}

func (x *CDSClientResponse) Reset() {
	*x = CDSClientResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ContactDiscovery_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CDSClientResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CDSClientResponse) ProtoMessage() {}

func (x *CDSClientResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ContactDiscovery_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CDSClientResponse.ProtoReflect.Descriptor instead.
func (*CDSClientResponse) Descriptor() ([]byte, []int) {
	return file_ContactDiscovery_proto_rawDescGZIP(), []int{1}
}

func (x *CDSClientResponse) GetE164PniAciTriples() []byte {
	if x != nil {
		return x.E164PniAciTriples
	}
	return nil
}

func (x *CDSClientResponse) GetToken() []byte {
	if x != nil {
		return x.Token
	}
	return nil
}

var File_ContactDiscovery_proto protoreflect.FileDescriptor

var file_ContactDiscovery_proto_rawDesc = []byte{
	0x0a, 0x16, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0x9e, 0x02, 0x0a, 0x10, 0x43, 0x44, 0x53, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0d,
	0x61, 0x63, 0x69, 0x5f, 0x75, 0x61, 0x6b, 0x5f, 0x70, 0x61, 0x69, 0x72, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0b, 0x61, 0x63, 0x69, 0x55, 0x61, 0x6b, 0x50, 0x61, 0x69, 0x72, 0x73,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x65, 0x76, 0x5f, 0x65, 0x31, 0x36, 0x34, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x72, 0x65, 0x76, 0x45, 0x31, 0x36, 0x34, 0x73, 0x12,
	0x1b, 0x0a, 0x09, 0x6e, 0x65, 0x77, 0x5f, 0x65, 0x31, 0x36, 0x34, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x08, 0x6e, 0x65, 0x77, 0x45, 0x31, 0x36, 0x34, 0x73, 0x12, 0x23, 0x0a, 0x0d,
	0x64, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x65, 0x31, 0x36, 0x34, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x45, 0x31, 0x36, 0x34,
	0x73, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x61, 0x63, 0x6b, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x63, 0x6b, 0x12,
	0x37, 0x0a, 0x18, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x61, 0x63, 0x69, 0x73, 0x5f, 0x77,
	0x69, 0x74, 0x68, 0x6f, 0x75, 0x74, 0x5f, 0x75, 0x61, 0x6b, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x15, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x41, 0x63, 0x69, 0x73, 0x57, 0x69, 0x74,
	0x68, 0x6f, 0x75, 0x74, 0x55, 0x61, 0x6b, 0x73, 0x22, 0x5a, 0x0a, 0x11, 0x43, 0x44, 0x53, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a,
	0x14, 0x65, 0x31, 0x36, 0x34, 0x5f, 0x70, 0x6e, 0x69, 0x5f, 0x61, 0x63, 0x69, 0x5f, 0x74, 0x72,
	0x69, 0x70, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x11, 0x65, 0x31, 0x36,
	0x34, 0x50, 0x6e, 0x69, 0x41, 0x63, 0x69, 0x54, 0x72, 0x69, 0x70, 0x6c, 0x65, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e,
}

var (
	file_ContactDiscovery_proto_rawDescOnce sync.Once
	file_ContactDiscovery_proto_rawDescData = file_ContactDiscovery_proto_rawDesc
)

func file_ContactDiscovery_proto_rawDescGZIP() []byte {
	file_ContactDiscovery_proto_rawDescOnce.Do(func() {
		file_ContactDiscovery_proto_rawDescData = protoimpl.X.CompressGZIP(file_ContactDiscovery_proto_rawDescData)
	})
	return file_ContactDiscovery_proto_rawDescData
}

var file_ContactDiscovery_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_ContactDiscovery_proto_goTypes = []interface{}{
	(*CDSClientRequest)(nil),  // 0: signalservice.CDSClientRequest
	(*CDSClientResponse)(nil), // 1: signalservice.CDSClientResponse
}
var file_ContactDiscovery_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_ContactDiscovery_proto_init() }
func file_ContactDiscovery_proto_init() {
	if File_ContactDiscovery_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ContactDiscovery_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CDSClientRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ContactDiscovery_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CDSClientResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ContactDiscovery_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ContactDiscovery_proto_goTypes,
		DependencyIndexes: file_ContactDiscovery_proto_depIdxs,
		MessageInfos:      file_ContactDiscovery_proto_msgTypes,
	}.Build()
	File_ContactDiscovery_proto = out.File
	file_ContactDiscovery_proto_rawDesc = nil
	file_ContactDiscovery_proto_goTypes = nil
	file_ContactDiscovery_proto_depIdxs = nil
}
