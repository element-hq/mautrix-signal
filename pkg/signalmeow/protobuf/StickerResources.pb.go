//*
// Copyright (C) 2019 Open Whisper Systems
//
// Licensed according to the LICENSE file in this repository.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v3.21.12
// source: StickerResources.proto

package signalpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Pack struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title    *string         `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	Author   *string         `protobuf:"bytes,2,opt,name=author" json:"author,omitempty"`
	Cover    *Pack_Sticker   `protobuf:"bytes,3,opt,name=cover" json:"cover,omitempty"`
	Stickers []*Pack_Sticker `protobuf:"bytes,4,rep,name=stickers" json:"stickers,omitempty"`
}

func (x *Pack) Reset() {
	*x = Pack{}
	if protoimpl.UnsafeEnabled {
		mi := &file_StickerResources_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pack) ProtoMessage() {}

func (x *Pack) ProtoReflect() protoreflect.Message {
	mi := &file_StickerResources_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pack.ProtoReflect.Descriptor instead.
func (*Pack) Descriptor() ([]byte, []int) {
	return file_StickerResources_proto_rawDescGZIP(), []int{0}
}

func (x *Pack) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *Pack) GetAuthor() string {
	if x != nil && x.Author != nil {
		return *x.Author
	}
	return ""
}

func (x *Pack) GetCover() *Pack_Sticker {
	if x != nil {
		return x.Cover
	}
	return nil
}

func (x *Pack) GetStickers() []*Pack_Sticker {
	if x != nil {
		return x.Stickers
	}
	return nil
}

type Pack_Sticker struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          *uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Emoji       *string `protobuf:"bytes,2,opt,name=emoji" json:"emoji,omitempty"`
	ContentType *string `protobuf:"bytes,3,opt,name=contentType" json:"contentType,omitempty"`
}

func (x *Pack_Sticker) Reset() {
	*x = Pack_Sticker{}
	if protoimpl.UnsafeEnabled {
		mi := &file_StickerResources_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pack_Sticker) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pack_Sticker) ProtoMessage() {}

func (x *Pack_Sticker) ProtoReflect() protoreflect.Message {
	mi := &file_StickerResources_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pack_Sticker.ProtoReflect.Descriptor instead.
func (*Pack_Sticker) Descriptor() ([]byte, []int) {
	return file_StickerResources_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Pack_Sticker) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *Pack_Sticker) GetEmoji() string {
	if x != nil && x.Emoji != nil {
		return *x.Emoji
	}
	return ""
}

func (x *Pack_Sticker) GetContentType() string {
	if x != nil && x.ContentType != nil {
		return *x.ContentType
	}
	return ""
}

var File_StickerResources_proto protoreflect.FileDescriptor

var file_StickerResources_proto_rawDesc = []byte{
	0x0a, 0x16, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0xf3, 0x01, 0x0a, 0x04, 0x50, 0x61, 0x63, 0x6b,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x31,
	0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x61,
	0x63, 0x6b, 0x2e, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x12, 0x37, 0x0a, 0x08, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x2e, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72,
	0x52, 0x08, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x73, 0x1a, 0x51, 0x0a, 0x07, 0x53, 0x74,
	0x69, 0x63, 0x6b, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x12, 0x20, 0x0a, 0x0b, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x42, 0x42, 0x0a,
	0x31, 0x6f, 0x72, 0x67, 0x2e, 0x77, 0x68, 0x69, 0x73, 0x70, 0x65, 0x72, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x73, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x73, 0x74, 0x69, 0x63, 0x6b,
	0x65, 0x72, 0x42, 0x0d, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x73,
}

var (
	file_StickerResources_proto_rawDescOnce sync.Once
	file_StickerResources_proto_rawDescData = file_StickerResources_proto_rawDesc
)

func file_StickerResources_proto_rawDescGZIP() []byte {
	file_StickerResources_proto_rawDescOnce.Do(func() {
		file_StickerResources_proto_rawDescData = protoimpl.X.CompressGZIP(file_StickerResources_proto_rawDescData)
	})
	return file_StickerResources_proto_rawDescData
}

var file_StickerResources_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_StickerResources_proto_goTypes = []interface{}{
	(*Pack)(nil),         // 0: signalservice.Pack
	(*Pack_Sticker)(nil), // 1: signalservice.Pack.Sticker
}
var file_StickerResources_proto_depIdxs = []int32{
	1, // 0: signalservice.Pack.cover:type_name -> signalservice.Pack.Sticker
	1, // 1: signalservice.Pack.stickers:type_name -> signalservice.Pack.Sticker
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_StickerResources_proto_init() }
func file_StickerResources_proto_init() {
	if File_StickerResources_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_StickerResources_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pack); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_StickerResources_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pack_Sticker); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_StickerResources_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_StickerResources_proto_goTypes,
		DependencyIndexes: file_StickerResources_proto_depIdxs,
		MessageInfos:      file_StickerResources_proto_msgTypes,
	}.Build()
	File_StickerResources_proto = out.File
	file_StickerResources_proto_rawDesc = nil
	file_StickerResources_proto_goTypes = nil
	file_StickerResources_proto_depIdxs = nil
}
